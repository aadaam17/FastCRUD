name: Build and Deploy Code

on: [push, pull_request]

jobs:
  # the job here for building, CI
  build:
    environment:
      name: Testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pull git repo
        uses: actions/checkout@v4
      - name: Installing python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Installing pip
        run: python -m pip install --upgrade pip

      - name: Installing all dependencies [requirements.txt]
        run: pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest
          pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and Push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastcrud:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

  # the job for deployment, CD
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: Production

    steps:
      # - name: Pull git repo
      #   uses: actions/checkout@v4

      # - uses: akhileshns/heroku-deploy@v3.13.15
      #   with:
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
      #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME } #Must be unique in Heroku
      #     heroku_email: ${{ secrets.HEROKU_EMAIL }}

      - name: deploy to Ubuntu server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROD_UBUNTU_HOST }}
          username: ${{ secrets.PROD_UBUNTU_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # password: ${{ secrets.PROD_UBUNTU_PASSWORD }}
          # port: ${{ secrets.PORT }}
          script: |
            cd app/src
            git pull
            echo ${{ secrets.PROD_UBUNTU_PASSWORD }} | sudo -S systemctl restart fastapi